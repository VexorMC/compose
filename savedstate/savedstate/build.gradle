/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.PlatformIdentifier
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("JetbrainsAndroidXPlugin")
}

JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXMultiplatform {
    android()
    desktop()
    mac()
    linux()
    ios()
    js()
    wasm()

    defaultPlatform(PlatformIdentifier.ANDROID)
}

kotlin {
    js {
        browser()
    }
    wasmJs()

    watchosArm64()
    watchosArm32()
    watchosX64()
    watchosSimulatorArm64()
    tvosArm64()
    tvosX64()
    tvosSimulatorArm64()

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(project(":annotation:annotation"))
                api(project(":core:core-bundle"))
                api(project(":lifecycle:lifecycle-common"))
            }
        }
        jvmMain {
            dependsOn(commonMain)

            dependencies {
                api("androidx.arch.core:core-common:2.2.0")
            }
        }

        desktopMain.dependsOn(jvmMain)
        androidMain.dependsOn(jvmMain)

        androidInstrumentedTest {
            dependencies {
                implementation(project(":lifecycle:lifecycle-runtime"))
                implementation(libs.testExtJunit)
                implementation(libs.testCore)
                implementation(libs.testRunner)
                implementation(libs.testRules)
                implementation(libs.truth)
            }
        }

        nonJvmMain.dependsOn(commonMain)

        targets.all { target ->
            if (target.platformType !in [
                    KotlinPlatformType.androidJvm,
                    KotlinPlatformType.jvm,
                    KotlinPlatformType.common
            ]) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nonJvmMain)
                }
            }
        }
    }
}

android {
    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")
    }
    namespace "androidx.savedstate"
}

androidx {
    name = "Saved State"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2018"
    description = "Android Lifecycle Saved State"
    metalavaK2UastEnabled = true
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name "VexorRepository"
                url "https://maven.vexor.dev/releases"
                credentials {
                    username = properties['username']
                    password = properties['token']
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}